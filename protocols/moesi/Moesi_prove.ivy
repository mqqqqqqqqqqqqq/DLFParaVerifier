#lang ivy1.7

type node_t

type locationtype_t = {m_em, ostatus_em, e_em, s_em, i_em}

individual sta(F:node_t) : locationtype_t


after init{
    require sta(A) = i_em;
    
    }


action t1 = {
    local i: node_t {
    require sta(i) = e_em;
    sta(i) := m_em;
    }
}



action t2 = {
    local i: node_t {
    require sta(i) = i_em;
    sta(i) := s_em;
        if (A ~= i & sta(A) = e_em) {
      sta(A) := s_em;
      };
        if (A ~= i & sta(A) = m_em) {
      sta(A) := ostatus_em;
      };
    }
}



action t3 = {
    local i: node_t {
    require sta(i) = s_em;
    sta(i) := e_em;
        if (A ~= i) {
      sta(A) := i_em;
      };
    }
}



action t4 = {
    local i: node_t {
    require sta(i) = ostatus_em;
    sta(i) := e_em;
        if (A ~= i) {
      sta(A) := i_em;
      };
    }
}



action t5 = {
    local i: node_t {
    require sta(i) = i_em;
    sta(i) := e_em;
        if (A ~= i) {
      sta(A) := i_em;
      };
    }
}



export t1
export t2
export t3
export t4
export t5


conjecture forall A,B. (A ~= B) -> ~(sta(A) = e_em & sta(B) = m_em)
conjecture forall A,B. (A ~= B) -> ~(sta(A) = e_em & sta(B) = e_em)
