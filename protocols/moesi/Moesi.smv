MODULE main
VAR
sta[1] : {m_em, ostatus_em, e_em, s_em, i_em};
sta[2] : {m_em, ostatus_em, e_em, s_em, i_em};

--------------------

n_t1__1 : process Proc__n_t1__1(sta[1]);

n_t1__2 : process Proc__n_t1__2(sta[2]);

n_t2__1 : process Proc__n_t2__1(sta[1], sta[2]);

n_t2__2 : process Proc__n_t2__2(sta[2], sta[1]);

n_t3__1 : process Proc__n_t3__1(sta[1], sta[2]);

n_t3__2 : process Proc__n_t3__2(sta[2], sta[1]);

n_t4__1 : process Proc__n_t4__1(sta[1], sta[2]);

n_t4__2 : process Proc__n_t4__2(sta[2], sta[1]);

n_t5__1 : process Proc__n_t5__1(sta[1], sta[2]);

n_t5__2 : process Proc__n_t5__2(sta[2], sta[1]);

--------------------

ASSIGN
init(sta[1]) := case
TRUE : i_em;
esac;
init(sta[2]) := case
TRUE : i_em;
esac;

--------------------



--------------------

MODULE Proc__n_t1__1(sta__1)
ASSIGN
next(sta__1) := case
(sta__1 = e_em) : m_em;
TRUE : sta__1;
esac;

---------

MODULE Proc__n_t1__2(sta__2)
ASSIGN
next(sta__2) := case
(sta__2 = e_em) : m_em;
TRUE : sta__2;
esac;

---------


---------

MODULE Proc__n_t2__1(sta__1, sta__2)
ASSIGN
next(sta__1) := case
(sta__1 = i_em) : s_em;
(sta__1 = i_em & 1 != 1 & sta__1 = e_em) : s_em;
(sta__1 = i_em & 1 != 1 & sta__1 = m_em) : ostatus_em;
TRUE : sta__1;
esac;
next(sta__2) := case
(sta__1 = i_em & 2 != 1 & sta__2 = e_em) : s_em;
(sta__1 = i_em & 2 != 1 & sta__2 = m_em) : ostatus_em;
TRUE : sta__2;
esac;

---------

MODULE Proc__n_t2__2(sta__2, sta__1)
ASSIGN
next(sta__2) := case
(sta__2 = i_em) : s_em;
(sta__2 = i_em & 2 != 2 & sta__2 = e_em) : s_em;
(sta__2 = i_em & 2 != 2 & sta__2 = m_em) : ostatus_em;
TRUE : sta__2;
esac;
next(sta__1) := case
(sta__2 = i_em & 1 != 2 & sta__1 = e_em) : s_em;
(sta__2 = i_em & 1 != 2 & sta__1 = m_em) : ostatus_em;
TRUE : sta__1;
esac;

---------


---------

MODULE Proc__n_t3__1(sta__1, sta__2)
ASSIGN
next(sta__1) := case
(sta__1 = s_em) : e_em;
(sta__1 = s_em & 1 != 1) : i_em;
TRUE : sta__1;
esac;
next(sta__2) := case
(sta__1 = s_em & 2 != 1) : i_em;
TRUE : sta__2;
esac;

---------

MODULE Proc__n_t3__2(sta__2, sta__1)
ASSIGN
next(sta__2) := case
(sta__2 = s_em) : e_em;
(sta__2 = s_em & 2 != 2) : i_em;
TRUE : sta__2;
esac;
next(sta__1) := case
(sta__2 = s_em & 1 != 2) : i_em;
TRUE : sta__1;
esac;

---------


---------

MODULE Proc__n_t4__1(sta__1, sta__2)
ASSIGN
next(sta__1) := case
(sta__1 = ostatus_em) : e_em;
(sta__1 = ostatus_em & 1 != 1) : i_em;
TRUE : sta__1;
esac;
next(sta__2) := case
(sta__1 = ostatus_em & 2 != 1) : i_em;
TRUE : sta__2;
esac;

---------

MODULE Proc__n_t4__2(sta__2, sta__1)
ASSIGN
next(sta__2) := case
(sta__2 = ostatus_em) : e_em;
(sta__2 = ostatus_em & 2 != 2) : i_em;
TRUE : sta__2;
esac;
next(sta__1) := case
(sta__2 = ostatus_em & 1 != 2) : i_em;
TRUE : sta__1;
esac;

---------


---------

MODULE Proc__n_t5__1(sta__1, sta__2)
ASSIGN
next(sta__1) := case
(sta__1 = i_em) : e_em;
(sta__1 = i_em & 1 != 1) : i_em;
TRUE : sta__1;
esac;
next(sta__2) := case
(sta__1 = i_em & 2 != 1) : i_em;
TRUE : sta__2;
esac;

---------

MODULE Proc__n_t5__2(sta__2, sta__1)
ASSIGN
next(sta__2) := case
(sta__2 = i_em) : e_em;
(sta__2 = i_em & 2 != 2) : i_em;
TRUE : sta__2;
esac;
next(sta__1) := case
(sta__2 = i_em & 1 != 2) : i_em;
TRUE : sta__1;
esac;

---------


---------

